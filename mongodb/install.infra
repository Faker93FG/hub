ask_sudo_password

# Install source
if [ ! -f /etc/apt/sources.list.d/mongodb-org-4.2.list ]; then
    apt-get install -y gnupg
    wget -qO - https://www.mongodb.org/static/pgp/server-4.2.asc | apt-key add -
    echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $(lsb_release -cs)/mongodb-org/4.2 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-4.2.list
fi

# Install Mongodb
apt-get update
apt-get install -y mongodb-org
sleep 2

# Add admin user
ask MONGODB_USER "admin" "What is the mongodb admin user?"
ask MONGODB_PASSWORD "" "What is the mongodb admin password?"

MONGODB_EXISTS=$(mongo --quiet -u "$MONGODB_USER" -p "$MONGODB_PASSWORD" \
    --eval "db.system.users.find({user: '"$MONGODB_USER"'}).count()" admin)

if [ ! $MONGODB_EXISTS ]; then

    info "Creating MongoDB user..."

    mongo <<EOF
    use admin
    db.createUser({
        user: "$MONGODB_USER",
        pwd: "$MONGODB_PASSWORD",
        roles:
        [
        {role: "read", db: "admin"},
        {role: "readWrite", db: "admin"},
        {role: "dbAdmin", db: "admin"},
        {role: "userAdmin", db: "admin"},
        {role: "clusterAdmin", db: "admin"},
        {role: "readAnyDatabase", db: "admin"},
        {role: "readWriteAnyDatabase", db: "admin"},
        {role: "userAdminAnyDatabase", db: "admin"},
        {role: "dbAdminAnyDatabase", db: "admin"}
        ]
    })
EOF

fi

# Allow only authenticated connection
if ! grep -q "authorization: enabled" /etc/mongod.conf; then
    cat >> /etc/mongod.conf <<EOL
security:
    authorization: enabled
EOL
fi

# Add to startup at boot
systemctl enable mongod.service

# Restart service
service mongod restart